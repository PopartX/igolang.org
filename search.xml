<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>堡垒机jumpServer一键脚本</title>
      <link href="/2019/05/12/jumpserver/"/>
      <url>/2019/05/12/jumpserver/</url>
      
        <content type="html"><![CDATA[<h3 id="开源堡垒机一健脚本"><a href="#开源堡垒机一健脚本" class="headerlink" title="开源堡垒机一健脚本"></a>开源堡垒机一健脚本</h3><pre class=" language-bash"><code class="language-bash"><span class="token keyword">echo</span> -e <span class="token string">"\033[31m 1. 防火墙 Selinux 设置 \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>systemctl status firewalld <span class="token operator">|</span> <span class="token function">grep</span> running<span class="token variable">)</span></span>"</span> <span class="token operator">!=</span> <span class="token string">""</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>80/tcp --permanent<span class="token punctuation">;</span> firewall-cmd --zone<span class="token operator">=</span>public --add-port<span class="token operator">=</span>2222/tcp --permanent<span class="token punctuation">;</span> firewall-cmd --permanent --add-rich-rule<span class="token operator">=</span><span class="token string">"rule family="</span>ipv4<span class="token string">" source address="</span>192.168.11.110/24<span class="token string">" port protocol="</span>tcp<span class="token string">" port="</span>8080<span class="token string">" accept"</span><span class="token punctuation">;</span> firewall-cmd --reload<span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span>getenforce<span class="token variable">)</span></span>"</span> <span class="token operator">!=</span> <span class="token string">"Disabled"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> setsebool -P httpd_can_network_connect 1<span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token keyword">echo</span> -e <span class="token string">"\033[31m 2. 部署环境 \033[0m"</span> \<span class="token operator">&amp;&amp;</span> yum update -y \<span class="token operator">&amp;&amp;</span> <span class="token function">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime \<span class="token operator">&amp;&amp;</span> yum -y <span class="token function">install</span> kde-l10n-Chinese \<span class="token operator">&amp;&amp;</span> yum -y reinstall glibc-common \<span class="token operator">&amp;&amp;</span> localedef -c -f UTF-8 -i zh_CN zh_CN.UTF-8 \<span class="token operator">&amp;&amp;</span> <span class="token function">export</span> LC_ALL<span class="token operator">=</span>zh_CN.UTF-8 \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> <span class="token string">'LANG="zh_CN.UTF-8"'</span> <span class="token operator">></span> /etc/locale.conf \<span class="token operator">&amp;&amp;</span> yum -y <span class="token function">install</span> <span class="token function">wget</span> gcc epel-release <span class="token function">git</span> \<span class="token operator">&amp;&amp;</span> yum <span class="token function">install</span> -y yum-utils device-mapper-persistent-data lvm2 \<span class="token operator">&amp;&amp;</span> yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo \<span class="token operator">&amp;&amp;</span> yum makecache fast \<span class="token operator">&amp;&amp;</span> rpm --import https://mirrors.aliyun.com/docker-ce/linux/centos/gpg \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> -e <span class="token string">"[nginx-stable]\nname=nginx stable repo\nbaseurl=http://nginx.org/packages/centos/\<span class="token variable">$releasever</span>/\<span class="token variable">$basearch</span>/\ngpgcheck=1\nenabled=1\ngpgkey=https://nginx.org/keys/nginx_signing.key"</span> <span class="token operator">></span> /etc/yum.repos.d/nginx.repo \<span class="token operator">&amp;&amp;</span> rpm --import https://nginx.org/keys/nginx_signing.key \<span class="token operator">&amp;&amp;</span> yum -y <span class="token function">install</span> redis mariadb mariadb-devel mariadb-server nginx docker-ce \<span class="token operator">&amp;&amp;</span> systemctl <span class="token function">enable</span> redis mariadb nginx docker \<span class="token operator">&amp;&amp;</span> systemctl start redis mariadb \<span class="token operator">&amp;&amp;</span> yum -y <span class="token function">install</span> python36 python36-devel \<span class="token operator">&amp;&amp;</span> python3.6 -m venv /opt/py3<span class="token keyword">echo</span> -e <span class="token string">"\033[31m 3. 下载组件 \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> /opt \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token string">"/opt/jumpserver"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token function">git</span> clone https://github.com/jumpserver/jumpserver.git<span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -f <span class="token string">"/opt/luna.tar.gz"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token function">wget</span> https://demo.jumpserver.org/download/luna/1.4.9/luna.tar.gz<span class="token punctuation">;</span> <span class="token function">tar</span> xf luna.tar.gz<span class="token punctuation">;</span> <span class="token function">chown</span> -R root:root luna<span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> yum -y <span class="token function">install</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /opt/jumpserver/requirements/rpm_requirements.txt<span class="token variable">)</span></span> \<span class="token operator">&amp;&amp;</span> <span class="token function">source</span> /opt/py3/bin/activate \<span class="token operator">&amp;&amp;</span> pip <span class="token function">install</span> --upgrade pip setuptools -i https://mirrors.aliyun.com/pypi/simple/ \<span class="token operator">&amp;&amp;</span> pip <span class="token function">install</span> -r /opt/jumpserver/requirements/requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ \<span class="token operator">&amp;&amp;</span> curl -sSL https://get.daocloud.io/daotools/set_mirror.sh <span class="token operator">|</span> sh -s http://f1361db2.m.daocloud.io \<span class="token operator">&amp;&amp;</span> systemctl restart docker \<span class="token operator">&amp;&amp;</span> docker pull jumpserver/jms_coco:1.4.9 \<span class="token operator">&amp;&amp;</span> docker pull jumpserver/jms_guacamole:1.4.9 \<span class="token operator">&amp;&amp;</span> <span class="token function">rm</span> -rf /etc/nginx/conf.d/default.conf<span class="token keyword">echo</span> -e <span class="token string">"\033[31m 4. 配置nginx \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token function">cat</span> <span class="token operator">&lt;&lt;</span> EOF <span class="token operator">></span> /etc/nginx/conf.d/jumpserver.confserver <span class="token punctuation">{</span>    listen 80<span class="token punctuation">;</span>    client_max_body_size 100m<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true"># 录像及文件上传大小限制</span>    location /luna/ <span class="token punctuation">{</span>        try_files \<span class="token variable">$uri</span> / /index.html<span class="token punctuation">;</span>        <span class="token function">alias</span> /opt/luna/<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location /media/ <span class="token punctuation">{</span>        add_header Content-Encoding <span class="token function">gzip</span><span class="token punctuation">;</span>        root /opt/jumpserver/data/<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location /static/ <span class="token punctuation">{</span>        root /opt/jumpserver/data/<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location /socket.io/ <span class="token punctuation">{</span>        proxy_pass       http://localhost:5000/socket.io/<span class="token punctuation">;</span>        proxy_buffering off<span class="token punctuation">;</span>        proxy_http_version 1.1<span class="token punctuation">;</span>        proxy_set_header Upgrade \<span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>        proxy_set_header Connection <span class="token string">"upgrade"</span><span class="token punctuation">;</span>        proxy_set_header X-Real-IP \<span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        proxy_set_header Host \<span class="token variable">$host</span><span class="token punctuation">;</span>        proxy_set_header X-Forwarded-For \<span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>        access_log off<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location /coco/ <span class="token punctuation">{</span>        proxy_pass       http://localhost:5000/coco/<span class="token punctuation">;</span>        proxy_set_header X-Real-IP \<span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        proxy_set_header Host \<span class="token variable">$host</span><span class="token punctuation">;</span>        proxy_set_header X-Forwarded-For \<span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>        access_log off<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location /guacamole/ <span class="token punctuation">{</span>        proxy_pass       http://localhost:8081/<span class="token punctuation">;</span>        proxy_buffering off<span class="token punctuation">;</span>        proxy_http_version 1.1<span class="token punctuation">;</span>        proxy_set_header Upgrade \<span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>        proxy_set_header Connection \<span class="token variable">$http_connection</span><span class="token punctuation">;</span>        proxy_set_header X-Real-IP \<span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        proxy_set_header Host \<span class="token variable">$host</span><span class="token punctuation">;</span>        proxy_set_header X-Forwarded-For \<span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>        access_log off<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    location / <span class="token punctuation">{</span>        proxy_pass http://localhost:8080<span class="token punctuation">;</span>        proxy_set_header X-Real-IP \<span class="token variable">$remote_addr</span><span class="token punctuation">;</span>        proxy_set_header Host \<span class="token variable">$host</span><span class="token punctuation">;</span>        proxy_set_header X-Forwarded-For \<span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>EOF<span class="token keyword">echo</span> -e <span class="token string">"\033[31m 5. 处理配置文件 \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$DB_PASSWORD</span>"</span> <span class="token operator">=</span> <span class="token string">""</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> DB_PASSWORD<span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom <span class="token operator">|</span> <span class="token function">tr</span> -dc A-Za-z0-9 <span class="token operator">|</span> <span class="token function">head</span> -c 24<span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$SECRET_KEY</span>"</span> <span class="token operator">=</span> <span class="token string">""</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> SECRET_KEY<span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom <span class="token operator">|</span> <span class="token function">tr</span> -dc A-Za-z0-9 <span class="token operator">|</span> <span class="token function">head</span> -c 50<span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token string">"SECRET_KEY=<span class="token variable">$SECRET_KEY</span>"</span> <span class="token operator">>></span> ~/.bashrc<span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$BOOTSTRAP_TOKEN</span>"</span> <span class="token operator">=</span> <span class="token string">""</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> BOOTSTRAP_TOKEN<span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">cat</span> /dev/urandom <span class="token operator">|</span> <span class="token function">tr</span> -dc A-Za-z0-9 <span class="token operator">|</span> <span class="token function">head</span> -c 16<span class="token variable">`</span></span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token string">"BOOTSTRAP_TOKEN=<span class="token variable">$BOOTSTRAP_TOKEN</span>"</span> <span class="token operator">>></span> ~/.bashrc<span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$Server_IP</span>"</span> <span class="token operator">=</span> <span class="token string">""</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> Server_IP<span class="token operator">=</span>`ip addr <span class="token operator">|</span> <span class="token function">grep</span> inet <span class="token operator">|</span> <span class="token function">egrep</span> -v <span class="token string">'(127.0.0.1|inet6|docker)'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{print <span class="token variable">$2</span>}'</span> <span class="token operator">|</span> <span class="token function">tr</span> -d <span class="token string">"addr:"</span> <span class="token operator">|</span> <span class="token function">head</span> -n 1 <span class="token operator">|</span> <span class="token function">cut</span> -d / -f1`<span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token string">"/var/lib/mysql/jumpserver"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> mysql -uroot -e <span class="token string">"create database jumpserver default charset 'utf8';grant all on jumpserver.* to 'jumpserver'@'127.0.0.1' identified by '<span class="token variable">$DB_PASSWORD</span>';flush privileges;"</span><span class="token punctuation">;</span> <span class="token keyword">fi</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -f <span class="token string">"/opt/jumpserver/config.yml"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span> <span class="token function">cp</span> /opt/jumpserver/config_example.yml /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/SECRET_KEY:/SECRET_KEY: <span class="token variable">$SECRET_KEY</span>/g"</span> /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/BOOTSTRAP_TOKEN:/BOOTSTRAP_TOKEN: <span class="token variable">$BOOTSTRAP_TOKEN</span>/g"</span> /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/# DEBUG: true/DEBUG: false/g"</span> /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/# LOG_LEVEL: DEBUG/LOG_LEVEL: ERROR/g"</span> /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/# SESSION_EXPIRE_AT_BROWSER_CLOSE: false/SESSION_EXPIRE_AT_BROWSER_CLOSE: true/g"</span> /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token function">sed</span> -i <span class="token string">"s/DB_PASSWORD: /DB_PASSWORD: <span class="token variable">$DB_PASSWORD</span>/g"</span> /opt/jumpserver/config.yml<span class="token punctuation">;</span> <span class="token keyword">fi</span><span class="token keyword">echo</span> -e <span class="token string">"\033[31m 6. 启动 Jumpserver \033[0m"</span> \<span class="token operator">&amp;&amp;</span> systemctl start nginx \<span class="token operator">&amp;&amp;</span> <span class="token function">cd</span> /opt/jumpserver \<span class="token operator">&amp;&amp;</span> ./jms start all -d \<span class="token operator">&amp;&amp;</span> docker run --name jms_coco -d -p 2222:2222 -p 5000:5000 -e CORE_HOST<span class="token operator">=</span>http://<span class="token variable">$Server_IP</span>:8080 -e BOOTSTRAP_TOKEN<span class="token operator">=</span><span class="token variable">$BOOTSTRAP_TOKEN</span> jumpserver/jms_coco:1.4.9 \<span class="token operator">&amp;&amp;</span> docker run --name jms_guacamole -d -p 8081:8081 -e JUMPSERVER_SERVER<span class="token operator">=</span>http://<span class="token variable">$Server_IP</span>:8080 -e BOOTSTRAP_TOKEN<span class="token operator">=</span><span class="token variable">$BOOTSTRAP_TOKEN</span> jumpserver/jms_guacamole:1.4.9 \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> -e <span class="token string">"\033[31m 你的数据库密码是 <span class="token variable">$DB_PASSWORD</span> \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> -e <span class="token string">"\033[31m 你的SECRET_KEY是 <span class="token variable">$SECRET_KEY</span> \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> -e <span class="token string">"\033[31m 你的BOOTSTRAP_TOKEN是 <span class="token variable">$BOOTSTRAP_TOKEN</span> \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> -e <span class="token string">"\033[31m 你的服务器IP是 <span class="token variable">$Server_IP</span> \033[0m"</span> \<span class="token operator">&amp;&amp;</span> <span class="token keyword">echo</span> -e <span class="token string">"\033[31m 请打开浏览器访问 http://<span class="token variable">$Server_IP</span> 用户名:admin 密码:admin \033[0m"</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Devops </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jumpserver </tag>
            
            <tag> devops </tag>
            
            <tag> 开源 </tag>
            
            <tag> 堡垒机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/05/12/hello-world/"/>
      <url>/2019/05/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
